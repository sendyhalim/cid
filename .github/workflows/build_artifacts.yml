# We could use `@actions-rs/cargo` Action ability to automatically install `cross` tool
# in order to compile our application for some unusual targets.

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - '*' # Build on every tag release

name: build_artifacts

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest]
        include:
          - os: macos-latest
            target: x86_64-apple-darwin
            release_bin_name: jab.macos
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            release_bin_name: jab.linux
    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target=${{ matrix.target }}

      - name: Zip build result
        run: |
          zip --junk-paths ./target/${{ matrix.target }}/release/jab-${{ matrix.target }}.zip ./target/${{ matrix.target }}/release/jab

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: ./target/${{ matrix.target }}/release/jab-${{ matrix.target }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

          #  - name: Create Release
          #    id: create_release
          #    uses: actions/create-release@v1
          #    env:
          #      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          #    with:
          #      files: ./target/${{ matrix.target }}/release/jab.zip
          #      release_name: Release ${{ github.ref }}
          #      draft: false
          #      prerelease: false

          #  - name: Upload Release Asset
          #    id: upload-release-asset
          #    uses: actions/upload-release-asset@v1
          #    env:
          #      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          #    with:
          #      # This pulls from the CREATE RELEASE step above, referencing it's
          #      # ID to get its outputs object, which include a `upload_url`.
          #      # See below blog post for more info:
          #      # https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          #      upload_url: ${{ steps.create_release.outputs.upload_url }}
          #      asset_path: ./target/${{ matrix.target }}/release/jab.zip
          #      asset_name: ${{ matrix.release_bin_name }}
          #      asset_content_type: application/zip
